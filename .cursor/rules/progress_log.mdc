---
description: 
globs: 
alwaysApply: true
---
# Progress Logging Rules

> **Purpose** — Establish a lightweight, enforceable practice for recording day-to-day work so that any contributor (human or AI) can resume the project without context loss.

---

## 0 · Meta

* **File owner:** @0xjcf
* **Related folders:** `prompts/project/PROGRESS.md`, `prompts/phases/<NN>/00_checklist.md`
* **Enforced by:** future CI task (TODO `check_progress_log.yml`).

---

## 1 · PROGRESS.md Journal

1. Location: `prompts/project/PROGRESS.md` (one file for the whole repository).
2. Format: reverse-chronological markdown list.
   ```md
   ## YYYY-MM-DD · _Session End_
   * _Author_: @username (or AI-agent)
   * _Phase_: XX-phase-name
   * _Work_: Implemented feature X, refactored Y, fixed bug Z (link to #PR or commit).
   * _Next_: Tackle task A from phase checklist.
   ```
3. Granularity: 1–3 bullet lines per coding session (keep it concise).
4. Mandatory Update: Append a new entry **at the end of every session** and push in the same branch/PR. Checked by pre-commit hook.
5. Links: Reference PRs, commits or issues for traceability.

### CI Enforcement (planned)
* A GitHub Action will fail if the latest commit modifies source code but does **not** touch `PROGRESS.md`.

---

## 2 · Phase Checklists

* Each active phase owns `prompts/phases/<NN>/00_checklist.md`.
* Always tick a box or add a note when a deliverable changes state.
* If a line is blocked, annotate with `⚠ blocked by #<issue>`.

---

## 3 · Daily Workflow Summary

1. **Start of session**: read the latest entry in `PROGRESS.md`, open the current phase checklist.
2. **During**: code + update checklist as deliverables progress.
3. **End of session**: append to `PROGRESS.md`.

---

**Remember:** *A two-minute note today saves twenty minutes of archaeology tomorrow.*

