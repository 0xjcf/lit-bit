[package]
name = "lit-bit-core"
version = "0.0.1-alpha.0"
edition = "2024"
authors = ["0xjcf <jflores717@gmail.com>"]
description = "A Rust library for building type-safe, Harel statecharts, inspired by XState."
license = "MIT OR Apache-2.0"
repository = "https://github.com/0xjcf/lit-bit"
readme = "README.md" # Assuming you'll create a crate-level README.md later
keywords = ["statechart", "statemachine", "fsm", "no_std", "embedded"]
categories = ["embedded", "no-std", "algorithms"]

[lib]
# Optionally, if you need to specify the library target explicitly:
# name = "lit-bit"
# path = "src/lib.rs"

[dependencies]
# Core dependencies (keep minimal for no_std focus)
# We might add `heapless` later if needed for no_std collections.

# Optional dependencies for features (generally std-related or host tools)
anyhow = { version = "1.0", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
thiserror = { version = "1.0", optional = true }
tracing = { version = "0.1", optional = true }
futures = { version = "0.3", optional = true, default-features = false }
async-trait = { version = "0.1", optional = true }
tokio = { version = "1", features = ["rt", "macros", "time"], optional = true }
lit-bit-macro = { path = "../lit-bit-macro", version = "0.1.0" }

# Dependencies for Cortex-M targets (like thumbv7m-none-eabi)
# MOVED TO TARGET-SPECIFIC BELOW
# cortex-m = "0.7.7"
# cortex-m-rt = "0.7.5"

# Target-specific dependencies for RISC-V
[target.'cfg(target_arch = "riscv32")'.dependencies]
riscv-rt = "0.14.0"
riscv = "0.13.0"
semihosting = { version = "0.1.20", features = ["stdio"] }

# Target-specific dependencies for ARM Cortex-M
[target.'cfg(target_arch = "arm")'.dependencies]
cortex-m = "0.7.7"
cortex-m-rt = "0.7.5"

# panic-halt is a dev-dependency, examples will pick it up if cfg-ed for arm
# cortex-m-semihosting could be added here if needed for Cortex-M examples

[dev-dependencies]
panic-halt = "1.0.0" # For no_std examples (both ARM and RISC-V if cfg-ed in example)

# Host-specific dev dependencies (for macOS aarch64 host)
[target.aarch64-apple-darwin.dev-dependencies]
cargo-nextest = "0.9"
once_cell = { version = "1.19.0", default-features = false, features = ["critical-section"] }

# Dependencies for examples (if they need specific things not in main deps)
# Example: `tokio` for running async examples if the main lib doesn't pull it by default.

[features]
default = [] # Keep default empty for no_std focus

std = ["dep:anyhow", "dep:thiserror", "dep:serde", "dep:tracing", "futures/std"]
# The `async` feature implies `alloc` (via async-trait/futures)
# and if `std` is also active, can pull in tokio.
async = ["dep:async-trait", "dep:futures"]
diagram = ["dep:serde"] # For serializing statechart structure

# Example of combining features for specific use cases:
# async-std = ["async", "std", "dep:tokio"]
