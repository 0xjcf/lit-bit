[package]
name = "lit-bit-core"
version = "0.0.1-alpha.0"
edition = "2024"
authors = ["0xjcf <jflores717@gmail.com>"]
description = "A Rust library for building type-safe, Harel statecharts, inspired by XState."
license = "MIT OR Apache-2.0"
repository = "https://github.com/0xjcf/lit-bit"
readme = "README.md" # Assuming you'll create a crate-level README.md later
keywords = ["statechart", "statemachine", "fsm", "no_std", "embedded"]
categories = ["embedded", "no-std", "algorithms"]

[lib]
# Optionally, if you need to specify the library target explicitly:
# name = "lit-bit"
# path = "src/lib.rs"

[dependencies]
# Core dependencies (keep minimal for no_std focus)
# We might add `heapless` later if needed for no_std collections.
heapless = { version = "0.8.0", default-features = false }
static_cell = { version = "2.1.0", default-features = false }
lit-bit-macro = { workspace = true }
paste = "1.0"

# Optional dependencies for features (generally std-related or host tools)
anyhow = { version = "1.0", optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }
thiserror = { version = "1.0", optional = true }
tracing = { version = "0.1", optional = true }
futures = { version = "0.3", default-features = false, features = ["alloc"], optional = true }
async-trait = { version = "0.1", optional = true }
tokio = { version = "1.42", features = ["macros", "rt", "rt-multi-thread", "sync", "time"], optional = true }
log = { version = "0.4", optional = true }

# Panic handler for no_std examples
panic-halt = { version = "1.0.0", optional = true }

# Embassy dependencies for no_std async
embassy-futures = { version = "0.1", optional = true }
embassy-sync = { version = "0.6", optional = true }
embassy-time = { version = "0.3", optional = true }

# Dependencies for Cortex-M targets (like thumbv7m-none-eabi)
# MOVED TO TARGET-SPECIFIC BELOW
# cortex-m = "0.7.7"
# cortex-m-rt = "0.7.5"

# Target-specific dependencies for RISC-V
[target.'cfg(target_arch = "riscv32")'.dependencies]
riscv-rt = { version = "0.14.0", features = ["single-hart"] }
riscv = "0.13.0"
semihosting = { version = "0.1.20", features = ["stdio"] }

# Target-specific dependencies for ARM Cortex-M
[target.'cfg(target_arch = "arm")'.dependencies]
cortex-m = "0.7.7"
cortex-m-rt = "0.7.5"
# Embassy executor with ARM Cortex-M specific features
embassy-executor = { version = "0.6", features = ["task-arena-size-32768", "arch-cortex-m", "executor-thread", "integrated-timers"], optional = true }

# Target-specific dependencies for host builds (x86_64, etc.)
[target.'cfg(not(target_arch = "arm"))'.dependencies]
# Embassy executor without ARM-specific features for host builds
embassy-executor = { version = "0.6", features = ["task-arena-size-32768", "executor-thread", "integrated-timers"], optional = true }

# panic-halt is a dev-dependency, examples will pick it up if cfg-ed for arm
# cortex-m-semihosting could be added here if needed for Cortex-M examples

# Target-specific dev dependencies to prevent heavy deps from leaking into embedded builds
[target.'cfg(not(target_os = "none"))'.dev-dependencies]
tokio = { version = "1.42", features = ["macros", "rt", "rt-multi-thread", "sync", "time"] }
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"

# Minimal dev dependencies for embedded targets
[target.'cfg(target_os = "none")'.dev-dependencies]
panic-halt = "1.0.0"

# Dependencies for examples (if they need specific things not in main deps)
# Example: `tokio` for running async examples if the main lib doesn't pull it by default.

[features]
default = [] # Keep default empty for no_std focus

# Core features
std = ["dep:anyhow", "dep:thiserror", "dep:serde", "dep:serde_json", "dep:tracing", "dep:futures", "futures/std"]
alloc = ["dep:futures", "futures/alloc"]
diagram = ["dep:serde"] # For serializing statechart structure

# Async features (Phase 5 implementation)
async = [] # Umbrella feature for async support (no dependencies by itself)
async-tokio = ["async", "std", "dep:async-trait", "dep:futures", "dep:tokio"] # Tokio runtime integration
async-embassy = ["async", "dep:embassy-futures", "dep:embassy-executor", "dep:embassy-sync", "dep:embassy-time"] # Embassy runtime integration

# Legacy compatibility (will be deprecated in v0.2)
embassy = ["async-embassy"] # Alias for backward compatibility

# Examples panic handler feature
panic-halt = ["dep:panic-halt"]

debug-log = ["dep:log"]

# Examples that require std feature
[[example]]
name = "actor_backpressure"
required-features = ["std"]

[[example]]
name = "actor_statechart_integration"

[[example]]
name = "embassy_actor_simple"
required-features = ["async-embassy", "debug-log"]

# Examples that need panic handlers for no_std
[[example]]
name = "heap_crash"
required-features = ["panic-halt"]

[[example]]
name = "actor_simple_usage"
required-features = ["panic-halt"]

[[example]]
name = "external_events"
required-features = ["std"]
